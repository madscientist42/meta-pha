From 55a921edbca3ae5ca1ba3e62373f707d8ad19d56 Mon Sep 17 00:00:00 2001
From: Frank Earl <frank@earlconsult.com>
Date: Tue, 1 May 2018 08:00:57 -0400
Subject: GPIO Fixes.

Don't have a clue what they were thinking (Suggest the Linux-Sunxi dev
that came up with this device tree spec file look at the schematics
next time...sigh...) but it's now moved to the right GPIO pins for
a NanoPI class device (all of them use this pin on H-series SoC's)
and turned on Heartbeat support for the same...

diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index 1ed9f21..891dade 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -72,7 +72,8 @@
 
 		status {
 			label = "nanopi:red:status";
-			gpios = <&pio 0 20 GPIO_ACTIVE_HIGH>;
+			gpios = <&pio 0 10 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "heartbeat";
 		};
 	};
 
From a043f57ef25ab4ceb782ede4574282b965315b0d Mon Sep 17 00:00:00 2001
From: Frank Earl <frank@earlconsult.com>
Date: Tue, 1 May 2018 08:32:14 -0400
Subject: Additional GPIO fixes...

This time, the spec file fails to set the pinmux at start and call out
that for the WiFi power sequencing.  It doesn't work on the edge when
the WiFi chip's not enabled even though you specify the kernel kickstart
entry in the DTS.  Correcting...

diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index 891dade..585ccf4 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -114,7 +114,8 @@
 	wifi_pwrseq: wifi_pwrseq {
 		compatible = "mmc-pwrseq-simple";
 		pinctrl-names = "default";
-		reset-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7 */
+		pinctrl-0 = <&wifi_en_npi>;
+		reset-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7 */
 		post-power-on-delay-ms = <200>;
 	};
 };
@@ -131,6 +132,14 @@
 	status = "okay";
 };
 
+&ehci1 {
+	status = "okay";
+};
+
+&ehci2 {
+	status = "okay";
+};
+
 &ehci3 {
 	status = "okay";
 };
@@ -190,6 +199,14 @@
 	status = "okay";
 };
 
+&ohci1 {
+	status = "okay";
+};
+
+&ohci2 {
+	status = "okay";
+};
+
 &ohci3 {
 	status = "okay";
 };
@@ -200,6 +217,15 @@
 	status = "okay";
 };
 
+
+&r_pio {
+	wifi_en_npi: wifi_en_pin {
+		pins = "PL7";
+		function = "gpio_out";
+    };
+};
+
+
 &usb_otg {
 	dr_mode = "host";
 	status = "okay";
From 0b7c0c142a8c979b572bbdfdb3585c62a2922dd1 Mon Sep 17 00:00:00 2001
From: Frank Earl <frank@earlconsult.com>
Date: Fri, 4 May 2018 08:12:44 -0400
Subject: Turn on BT UART...

Stock, the config doesn't turn it on- so we're going to do that rather
than making the userland set everything up (Annoying...)

diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index 6081035..691ea92 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -217,6 +217,12 @@
 	status = "okay";
 };
 
+&uart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart3_pins>, <&uart3_rts_cts_pins>;
+	status = "okay";
+};
+
 
 &r_pio {
 	wifi_en_npi: wifi_en_pin {
From 128968281e3f8baad77a34cb04ce5fadc7713395 Mon Sep 17 00:00:00 2001
From: Frank Earl <frank@earlconsult.com>
Date: Wed, 11 Jul 2018 08:15:34 -0400
Subject: Add all the UARTs like FriendlyElec did for their Ubuntu Build.

This includes adding the CTS/RTS for the third UART.  You'd think that
people would transpose this stuff, but NOoooooo...  X-D

diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index 691ea92..84116eb 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -217,12 +217,30 @@
 	status = "okay";
 };
 
+&uart1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart1_pins>, <&uart1_rts_cts_pins>;
+	status = "okay";
+};
+
+&uart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart2_pins>, <&uart2_rts_cts_pins>;
+	status = "okay";
+};
+
 &uart3 {
 	pinctrl-names = "default";
 	pinctrl-0 = <&uart3_pins>, <&uart3_rts_cts_pins>;
 	status = "okay";
 };
 
+&pio {
+	uart2_rts_cts_pins: uart2_rts_cts {
+		pins = "PA2", "PA3";
+		function = "uart2";
+	};	
+};
 
 &r_pio {
 	wifi_en_npi: wifi_en_pin {
From 68d9884acdcf110e8041b929271b9947e469f2e3 Mon Sep 17 00:00:00 2001
From: Frank Earl <frank@earlconsult.com>
Date: Wed, 11 Jul 2018 08:25:28 -0400
Subject: Add rfkill spec for the BT core...

Suspect that the reset behavior is not properly enforced without this
making it just simply NOT work on the distribution.

diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index 84116eb..c7043f0 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -118,6 +118,17 @@
 		reset-gpios = <&r_pio 0 7 GPIO_ACTIVE_LOW>; /* PL7 */
 		post-power-on-delay-ms = <200>;
 	};
+
+	rfkill_bt {
+		compatible = "rfkill-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&bt_pwr_pin>;
+		reset-gpios = <&pio 6 13 GPIO_ACTIVE_HIGH>; /* PG13 */
+		clocks = <&osc32k>;
+		clock-frequency = <32768>;
+		rfkill-name = "sunxi-bt";
+		rfkill-type = "bluetooth";
+	};
 };
 
 &codec {


From f095b5b545ef9e99d828788826a31fc24427fb9f Mon Sep 17 00:00:00 2001
From: Frank Earl <frank@earlconsult.com>
Date: Wed, 11 Jul 2018 10:02:54 -0400
Subject: Add rfkill GPIO node.

Helps if you have the node you refer to in the .dts or a .dtsi, doesn't
it?

diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index d9101a1..ccfc149 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -258,6 +258,11 @@
 };
 
 &pio {
+	bt_pwr_pin: bt_pwr_pin@0 {
+		pins = "PG13";
+		function = "gpio_out";
+	};
+
 	uart2_rts_cts_pins: uart2_rts_cts {
 		pins = "PA2", "PA3";
 		function = "uart2";
From 9b6a8315c15b6182237decfbb9ff155094976857 Mon Sep 17 00:00:00 2001
From: Frank Earl <linusti@gmail.com>
Date: Wed, 11 Jul 2018 13:29:49 -0400
Subject: A real attempt at adding CPU speed/thermal governors

This addes a System ID and adds the support of speeds and
thermal throttling of the same.  This should lower power
consumption and add defensive functions for thermal conditions.

diff --git a/arch/arm/boot/dts/sunxi-h3-h5.dtsi b/arch/arm/boot/dts/sunxi-h3-h5.dtsi
index 7a83b1522..58e032a71 100644
--- a/arch/arm/boot/dts/sunxi-h3-h5.dtsi
+++ b/arch/arm/boot/dts/sunxi-h3-h5.dtsi
@@ -732,5 +732,25 @@
 				function = "s_cir_rx";
 			};
 		};
+
+	    sid: eeprom@01c14000 {
+		    compatible = "allwinner,sun8i-h3-sid";
+		    reg = <0x01c14000 0x400>;
+	    };
+
+		ths: ths@1c25000 {
+			compatible = "allwinner,sun8i-a33-ths";
+			reg = <0x01c25000 0x100>;
+			#thermal-sensor-cells = <0>;
+			#io-channel-cells = <0>;
+		};
+
+        thermal-zones {
+	        cpu_thermal: cpu_thermal {
+		        polling-delay-passive = <330>;
+		        polling-delay = <1000>;
+		        thermal-sensors = <&ths 0>;
+            };
+        };
 	};
 };
diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
index 51349fc52..77145447e 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5-nanopi-neo-plus2.dts
@@ -47,6 +47,7 @@
 #include <dt-bindings/gpio/gpio.h>
 #include <dt-bindings/input/input.h>
 #include <dt-bindings/pinctrl/sun4i-a10.h>
+#include <dt-bindings/thermal/thermal.h>

 / {
 	model = "FriendlyARM NanoPi NEO Plus2";
@@ -98,6 +99,7 @@
 	vdd_cpux: gpio-regulator {
 		compatible = "regulator-gpio";
 		pinctrl-names = "default";
+		pinctrl-0 = <&vdd_cpux_r_npi>;
 		regulator-name = "vdd-cpux";
 		regulator-type = "voltage";
 		regulator-boot-on;
@@ -131,6 +133,64 @@
 	};
 };

+&cpu0 {
+	operating-points = <
+		1248000 1300000
+		1008000	1100000
+		816000	1100000
+		624000	1100000
+		480000	1100000
+		312000	1100000
+		240000	1100000
+		120000	1100000
+		>;
+	#cooling-cells = <2>;
+	cooling-min-level = <0>;
+	cooling-max-level = <7>;
+	cpu0-supply = <&vdd_cpux>;
+};
+
+&cpu_thermal {
+    trips {
+        cpu_warm: cpu_warm {
+	        temperature = <65000>;
+	        hysteresis = <2000>;
+	        type = "passive";
+        };
+        cpu_hot: cpu_hot {
+	        temperature = <75000>;
+	        hysteresis = <2000>;
+	        type = "passive";
+        };
+        cpu_very_hot: cpu_very_hot {
+	        temperature = <90000>;
+	        hysteresis = <2000>;
+	        type = "passive";
+        };
+        cpu_crit: cpu_crit {
+	        temperature = <105000>;
+	        hysteresis = <2000>;
+	        type = "critical";
+        };
+    };
+
+    cooling-maps {
+        cpu_warm_limit_cpu {
+	        trip = <&cpu_warm>;
+	        cooling-device = <&cpu0 THERMAL_NO_LIMIT 1>;
+        };
+        cpu_hot_limit_cpu {
+	        trip = <&cpu_hot>;
+	        cooling-device = <&cpu0 2 3>;
+        };
+        cpu_very_hot_limit_cpu {
+	        trip = <&cpu_very_hot>;
+	        cooling-device = <&cpu0 5 THERMAL_NO_LIMIT>;
+        };
+    };
+};
+
+
 &codec {
 	allwinner,audio-routing =
 		"Line Out", "LINEOUT",
@@ -259,6 +319,13 @@
 };

 &r_pio {
+	vdd_cpux_r_npi: regulator_pins@0 {
+		pins = "PL6";
+		function = "gpio_out";
+		drive = <SUN4I_PINCTRL_10_MA>;
+		pull = <SUN4I_PINCTRL_NO_PULL>;
+	};
+
 	wifi_en_npi: wifi_en_pin {
 		pins = "PL7";
 		function = "gpio_out";
diff --git a/arch/arm64/boot/dts/allwinner/sun50i-h5.dtsi b/arch/arm64/boot/dts/allwinner/sun50i-h5.dtsi
index e237c05cf..deec4cdf2 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-h5.dtsi
+++ b/arch/arm64/boot/dts/allwinner/sun50i-h5.dtsi
@@ -47,11 +47,14 @@
 		#address-cells = <1>;
 		#size-cells = <0>;

-		cpu@0 {
+		cpu0: cpu@0 {
 			compatible = "arm,cortex-a53", "arm,armv8";
 			device_type = "cpu";
 			reg = <0>;
 			enable-method = "psci";
+			clocks = <&ccu CLK_CPUX>;
+			clock-latency = <244144>; /* 8 32k periods */
+			clock-frequency = <1200000000>;
 		};

 		cpu@1 {
@@ -59,6 +62,7 @@
 			device_type = "cpu";
 			reg = <1>;
 			enable-method = "psci";
+			clock-frequency = <1200000000>;
 		};

 		cpu@2 {
@@ -66,6 +70,7 @@
 			device_type = "cpu";
 			reg = <2>;
 			enable-method = "psci";
+			clock-frequency = <1200000000>;
 		};

 		cpu@3 {
@@ -73,6 +78,7 @@
 			device_type = "cpu";
 			reg = <3>;
 			enable-method = "psci";
+			clock-frequency = <1200000000>;
 		};
 	};


